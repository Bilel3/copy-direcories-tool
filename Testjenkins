pipeline {
    agent any

    environment {
        AUTH_API_URL = 'https://oauth2.accesscontrol.cloud.socgen/v3/oauth2/access_token'
        CLIENT_ID = 'ant prd snapshot'
        CLIENT_SECRET = 'xxxxx'
        GRANT_TYPE = 'client_credentials'
        SECOND_API_URL = 'https://example.com/api/endpoint' // Replace with your second API URL
    }

    stages {
        stage('Authenticate and Get Token') {
            steps {
                script {
                    // Run the curl command to authenticate and capture the response
                    def response = sh(
                        script: """
                        curl -s -X POST "${AUTH_API_URL}" \
                        -H "Content-Type: application/x-www-form-urlencoded" \
                        --data-urlencode "client_id=${CLIENT_ID}" \
                        --data-urlencode "client_secret=${CLIENT_SECRET}" \
                        --data "grant_type=${GRANT_TYPE}"
                        """,
                        returnStdout: true
                    ).trim()

                    echo "Response: ${response}" // Log the full response for debugging

                    // Parse the access token from the JSON response
                    def jsonResponse = readJSON text: response
                    def accessToken = jsonResponse.access_token

                    if (!accessToken) {
                        error "Failed to obtain access token!"
                    }

                    // Store the access token in an environment variable for the next stage
                    env.ACCESS_TOKEN = accessToken
                    echo "Access Token: ${env.ACCESS_TOKEN}" // Optional: Print the token (for debugging only)
                }
            }
        }

        stage('Use Token in Second API') {
            steps {
                script {
                    // Use the captured token in another API call
                    def secondApiResponse = sh(
                        script: """
                        curl -s -X GET "${SECOND_API_URL}" \
                        -H "Authorization: Bearer ${env.ACCESS_TOKEN}" \
                        -H "Content-Type: application/json"
                        """,
                        returnStdout: true
                    ).trim()

                    echo "Second API Response: ${secondApiResponse}"
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline execution completed."
        }
    }
}
